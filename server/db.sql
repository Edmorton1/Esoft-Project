CREATE TYPE role_type AS ENUM ('user', 'admin');

CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	email VARCHAR(255) UNIQUE NOT NULL,
	password VARCHAR(255) NOT NULL,
	role role_type DEFAULT 'user' NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE forms (
	id INT PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE NOT NULL,
	name VARCHAR(32) NOT NULL,
	surname VARCHAR(32),
  sex BOOLEAN NOT NULL,
	age INT,
	avatar TEXT,
	description TEXT, 
	target VARCHAR(64) NOT NULL,
	hood VARCHAR(64)
  -- ПОТОМ ЕЩЁ ДОБАВИТЬ КООРДИНАТЫ
);

CREATE TABLE likes (
	likeId SERIAL PRIMARY KEY,
	userId INT REFERENCES forms(id) ON DELETE CASCADE NOT NULL,
	liked_userId INT NOT NULL,
	FOREIGN KEY (liked_userId) REFERENCES forms(id) ON DELETE CASCADE
);

CREATE TABLE data_res (
	resId SERIAL PRIMARY KEY,
	userId INT REFERENCES forms(id) ON DELETE CASCADE NOT NULL,
	res_userId INT NOT NULL,
	FOREIGN KEY (res_userId) REFERENCES forms(id) ON DELETE CASCADE
);

CREATE TABLE tags (
  tagId SERIAL PRIMARY KEY,
  tag VARCHAR(64) UNIQUE NOT NULL
);

CREATE TABLE user_tags (
  userId INT REFERENCES forms(id) ON DELETE CASCADE NOT NULL,
  tagId INT REFERENCES tags(tagId) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (userId, tagId)
);

CREATE TABLE messages (
	msgId SERIAL PRIMARY KEY,
	fromId INT REFERENCES forms(id) ON DELETE CASCADE NOT NULL,
	toId INT REFERENCES forms(id) ON DELETE CASCADE NOT NULL,
	text TEXT NOT NULL,
	created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);